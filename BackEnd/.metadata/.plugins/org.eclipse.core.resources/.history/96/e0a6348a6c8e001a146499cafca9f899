package com.leadsponge.IO.controllers;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.leadsponge.IO.models.Cliente;
import com.leadsponge.IO.models.Contato;
import com.leadsponge.IO.repository.ClienteRepository;
import com.leadsponge.IO.repository.ContatoRepository;

@Controller
public class ContatoController {
	
	@Autowired
	private ContatoRepository cor;
	
	@Autowired
	private ClienteRepository clr;
	
	@RequestMapping("/contatos")
	public ModelAndView listarContato() {
		ModelAndView mv = new ModelAndView("cliente/listarContato");
		Iterable<Cliente> clientes = clr.findAll();
		mv.addObject("contatos", clientes);
		return mv;
	}
	
	@RequestMapping(value="/cadastrar", method=RequestMethod.GET)
	public ModelAndView cadastrarContato(@PathVariable("id") int id) {
		Cliente cliente = clr.findById(id);
		ModelAndView mv = new ModelAndView("contato/cadastrar");
		mv.addObject("cliente", cliente);
		return mv;
	}
	
	@RequestMapping(value = "/{id}", method = RequestMethod.POST)
	public String cadastrarContato(@PathVariable("id") int id, @Valid Contato contato,
			BindingResult result, RedirectAttributes attributes) {
		if (result.hasErrors()) {
			attributes.addFlashAttribute("mensagem", "Verifique os campos!");
			return "redirect:/{id}";
		}
		Cliente cliente = clr.findById(id);
		contato.setCliente(cliente);
		cor.save(contato);
		attributes.addFlashAttribute("mensagem", "Convidado adicionado com sucesso!");
		return "redirect:/{id}";
	}
	
	@RequestMapping("editarCliente/{id}")
	public String editarCliente(@Valid Contato contato, BindingResult result, RedirectAttributes attributes) {
		if(result.hasErrors()) {
			attributes.addFlashAttribute("mensagem", "Verifique os campos!");
			return "redirect:/editarContato";
		}
		cor.save(contato);
		attributes.addFlashAttribute("mensagem", "Contato Cadastrado com sucesso!");
		return "redirect:/contatos";
	}
	
	@RequestMapping("contato/{id}")
	public ModelAndView detalharContato(@PathVariable("id") int id) {
		Contato contato = cor.findById(id);
		ModelAndView mv = new ModelAndView("contato/detalhar");
		mv.addObject("contato", contato);
		return mv;
	}
	
	@RequestMapping("/deletarContato")
	public String deletarContato(int id) {
		Contato contato = cor.findById(id);
		cor.delete(contato);
		return "redirect:/contatos";
	}
}

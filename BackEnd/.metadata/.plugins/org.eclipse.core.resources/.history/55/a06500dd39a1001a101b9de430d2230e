package com.leadsponge.IO.endPoints;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.leadsponge.IO.endPoints.crudEndpoints.CrudController;
import com.leadsponge.IO.models.Email;
import com.leadsponge.IO.repository.EmailRepository;

@RestController
@RequestMapping("/emails")
public class EmailEndPoints extends CrudController {
	@Autowired
	private final EmailRepository repository;

	EmailEndPoints(EmailRepository repository) {
		this.repository = repository;
	}

	@GetMapping(value = { "", "/" })
	@PreAuthorize("hasAuthority('ROLE_PESQUISAR_CLIENTE') and #oauth2.hasScope('read')")
	public ResponseEntity<Iterable<?>> listar() {
		Iterable<Email> email = repository.findAll();
		if (email == null) {
			return ResponseEntity.notFound().build();
		} else {
			return ResponseEntity.ok(email);
		}
	}
}

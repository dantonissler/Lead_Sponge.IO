package com.leadsponge.IO.endPoints;

import java.util.Map;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Profile;
import org.springframework.http.HttpStatus;
import org.springframework.security.oauth2.common.OAuth2AccessToken;
import org.springframework.security.oauth2.provider.OAuth2Authentication;
import org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationDetails;
import org.springframework.security.oauth2.provider.token.TokenStore;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.leadsponge.IO.config.property.LeadSpongeApiProperty;

@Profile("oauth-security")
@RestController
@RequestMapping("/tokens")
public class TokenEndPoints {

//	@Autowired
//	private LeadSpongeApiProperty leadSpongeApiProperty;
	
	@Autowired
	private TokenStore tokenStore;

	@DeleteMapping("/revoke")
	public void revoke(HttpServletRequest req, HttpServletResponse resp) {
		Cookie cookie = new Cookie("refreshToken", null);
		cookie.setHttpOnly(true);
		cookie.setSecure(true);
		cookie.setPath(req.getContextPath() + "/oauth/token");
		cookie.setMaxAge(0);
		resp.addCookie(cookie);
		resp.setStatus(HttpStatus.NO_CONTENT.value());
	}
	
	

	@RequestMapping(method = {RequestMethod.POST, RequestMethod.GET}, value = "/oauth/me")
	public Map<String, Object> userInfo(OAuth2Authentication auth){
	    final OAuth2AuthenticationDetails details = (OAuth2AuthenticationDetails) auth.getDetails();
	    //token
	    String accessToken = details.getTokenValue();
	    //reference
	    final OAuth2AccessToken accessToken = tokenStore.readAccessToken(details.getTokenValue());
	   // clientid
	    String clientId = auth.getOAuth2Request().getClientId();
	}
}
